import hashlib

# Função para calcular o hash MD5 de um arquivo
def calculate_hash(file_path):
    hash_md5 = hashlib.md5()
    with open(file_path, 'rb') as f:
        for chunk in iter(lambda: f.read(4096), b""):
            hash_md5.update(chunk)
    return hash_md5.hexdigest()

# Função para verificar se o arquivo é seguro (simulação de lista de hashes conhecidos)
def check_for_malware(file_path):
    known_malware_hashes = ['d41d8cd98f00b204e9800998ecf8427e', '098f6bcd4621d373cade4e832627b4f6']  # Exemplo de hashes maliciosos
    file_hash = calculate_hash(file_path)
    
    if file_hash in known_malware_hashes:
        return "Warning: This file is likely infected with malware."
    else:
        return "This file is safe."

# Testando
file_path = input("Enter the path of the file to check: ")
print(check_for_malware(file_path))
